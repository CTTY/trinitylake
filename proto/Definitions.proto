syntax = "proto3";

option java_multiple_files = true;

package io.trinitylake.models;

message LakehouseDef {
  uint32 major_version = 2;
  optional uint32 order = 3;
  optional uint32 namespace_name_max_size_bytes = 4;
  optional uint32 table_name_max_size_bytes = 5;
  optional uint32 view_name_max_size_bytes = 6;
  optional uint32 file_path_max_size_bytes = 7;
  optional uint64 node_file_max_size_bytes = 8;
  map<string, string> properties = 9;
  optional uint64 maximum_version_age_millis = 10;
  optional uint32 minimum_versions_to_keep = 11;
  map<uint64, uint64> maximum_version_age_millis_overrides = 12;
  map<string, string> exported_snapshots = 13;
}

message NamespaceDef {
  map<string, string> properties = 2;
}

message TableDef {
  Schema schema = 2;
  repeated uint32 distribution_keys = 3;
  repeated uint32 primary_keys = 4;
  repeated uint32 sort_keys = 5;
  repeated uint32 unique_columns = 6;
  optional string table_type = 8;
  string table_format = 9;
  map<string, string> format_properties = 10;
  map<string, string> properties = 11;
}

message ViewDef {
  bool schema_binding = 2;
  Schema schema = 3;
  repeated SQLRepresentation sql_representations = 4;
  repeated Identifier referenced_object_ids = 5;
  map<string, string> properties = 6;
}

message Identifier {
  string namespace_name = 1;
  string name = 2;
}

message Schema {
  repeated Column columns = 1;
}

message Column {
  uint32 id = 1;
  string name = 2;
  DataType type = 3;
  bool nullable = 4;
  map<string, string> properties = 5;
  repeated Column struct_fields = 6;
  optional Column map_key = 7;
  optional Column map_value = 8;
  optional Column list_element = 9;
}

message SQLRepresentation {
  string type = 1;
  string sql = 2;
  string dialect = 3;
}

enum DataType {
  BOOLEAN = 0;
  INT2 = 1;
  INT4 = 2;
  INT8 = 3;
  DECIMAL = 4;
  FLOAT4 = 5;
  FLOAT8 = 6;
  CHAR = 7;
  VARCHAR = 8;
  DATE = 9;
  TIME = 10;
  TIMETZ = 11;
  TIMESTAMP = 12;
  TIMESTAMPTZ = 13;
  FIXED = 14;
  BINARY = 15;
  STRUCT = 16;
  MAP = 17;
  LIST = 18;
}